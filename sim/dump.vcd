$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 32 # a [31:0] $end
  $var wire 32 $ b [31:0] $end
  $var wire 5 % opcode [4:0] $end
  $var wire 32 & result [31:0] $end
  $var wire 1 ' zero $end
  $var wire 1 ( negative $end
  $var wire 1 ) carry_out $end
  $var wire 1 * overflow $end
  $scope module alu32 $end
   $var wire 32 # a [31:0] $end
   $var wire 32 $ b [31:0] $end
   $var wire 5 % opcode [4:0] $end
   $var wire 32 & result [31:0] $end
   $var wire 1 ' zero $end
   $var wire 1 ( negative $end
   $var wire 1 ) carry_out $end
   $var wire 1 * overflow $end
   $var wire 32 + sum [31:0] $end
   $var wire 32 , diff [31:0] $end
   $var wire 1 - carry_add $end
   $var wire 1 . carry_sub $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000001010 #
b00000000000000000000000000010100 $
b00000 %
b00000000000000000000000000011110 &
0'
0(
0)
0*
b00000000000000000000000000011110 +
b11111111111111111111111111110110 ,
0-
1.
#10
b00000000000000000000000000011110 #
b00000000000000000000000000001010 $
b00001 %
b00000000000000000000000000010100 &
b00000000000000000000000000101000 +
b00000000000000000000000000010100 ,
0.
#20
b00000000000000001111111111111111 #
b00000000000000001111000011110000 $
b00010 %
b00000000000000001111000011110000 &
b00000000000000011111000011101111 +
b00000000000000000000111100001111 ,
#30
b00000000000000001010101010101010 #
b00000000000000000101010101010101 $
b00011 %
b00000000000000001111111111111111 &
b00000000000000001111111111111111 +
b00000000000000000101010101010101 ,
